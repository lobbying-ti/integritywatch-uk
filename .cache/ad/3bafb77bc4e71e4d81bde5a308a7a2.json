{"id":"../node_modules/d3-array/src/median.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1701204570000},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\package.json","includedInParent":true,"mtime":1710515716978},{"name":"./ascending","loc":{"line":1,"column":22,"index":22},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\src\\median.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\src\\ascending.js"},{"name":"./number","loc":{"line":2,"column":19,"index":56},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\src\\median.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\src\\number.js"},{"name":"./quantile","loc":{"line":3,"column":21,"index":89},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\src\\median.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-array\\src\\quantile.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _ascending = _interopRequireDefault(require(\"./ascending\"));\nvar _number = _interopRequireDefault(require(\"./number\"));\nvar _quantile = _interopRequireDefault(require(\"./quantile\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _default(values, valueof) {\n  var n = values.length,\n    i = -1,\n    value,\n    numbers = [];\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = (0, _number.default)(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  } else {\n    while (++i < n) {\n      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n  return (0, _quantile.default)(numbers.sort(_ascending.default), 0.5);\n}"},"sourceMaps":null,"error":null,"hash":"43d56bd87ea8de27e8846e52f319ca7f","cacheData":{"env":{}}}