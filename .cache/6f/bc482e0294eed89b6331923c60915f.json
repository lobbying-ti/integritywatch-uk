{"id":"../node_modules/@popperjs/core/lib/enums.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1715768641465},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1715088598035}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.write = exports.viewport = exports.variationPlacements = exports.top = exports.start = exports.right = exports.reference = exports.read = exports.popper = exports.placements = exports.modifierPhases = exports.main = exports.left = exports.end = exports.clippingParents = exports.bottom = exports.beforeWrite = exports.beforeRead = exports.beforeMain = exports.basePlacements = exports.auto = exports.afterWrite = exports.afterRead = exports.afterMain = void 0;\nvar top = exports.top = 'top';\nvar bottom = exports.bottom = 'bottom';\nvar right = exports.right = 'right';\nvar left = exports.left = 'left';\nvar auto = exports.auto = 'auto';\nvar basePlacements = exports.basePlacements = [top, bottom, right, left];\nvar start = exports.start = 'start';\nvar end = exports.end = 'end';\nvar clippingParents = exports.clippingParents = 'clippingParents';\nvar viewport = exports.viewport = 'viewport';\nvar popper = exports.popper = 'popper';\nvar reference = exports.reference = 'reference';\nvar variationPlacements = exports.variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nvar placements = exports.placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nvar beforeRead = exports.beforeRead = 'beforeRead';\nvar read = exports.read = 'read';\nvar afterRead = exports.afterRead = 'afterRead'; // pure-logic modifiers\n\nvar beforeMain = exports.beforeMain = 'beforeMain';\nvar main = exports.main = 'main';\nvar afterMain = exports.afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nvar beforeWrite = exports.beforeWrite = 'beforeWrite';\nvar write = exports.write = 'write';\nvar afterWrite = exports.afterWrite = 'afterWrite';\nvar modifierPhases = exports.modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];"},"sourceMaps":null,"error":null,"hash":"656eeb341707b5a596fee976128f3917","cacheData":{"env":{}}}