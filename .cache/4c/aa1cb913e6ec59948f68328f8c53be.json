{"id":"../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1715768641465},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1715088598035},{"name":"../enums.js","loc":{"line":1,"column":48,"index":48},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\enums.js"},{"name":"../utils/getBasePlacement.js","loc":{"line":2,"column":29,"index":92},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\getBasePlacement.js"},{"name":"../utils/getMainAxisFromPlacement.js","loc":{"line":3,"column":37,"index":161},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\getMainAxisFromPlacement.js"},{"name":"../utils/getAltAxis.js","loc":{"line":4,"column":23,"index":224},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\getAltAxis.js"},{"name":"../utils/within.js","loc":{"line":5,"column":39,"index":289},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\within.js"},{"name":"../dom-utils/getLayoutRect.js","loc":{"line":6,"column":26,"index":337},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getLayoutRect.js"},{"name":"../dom-utils/getOffsetParent.js","loc":{"line":7,"column":28,"index":398},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getOffsetParent.js"},{"name":"../utils/detectOverflow.js","loc":{"line":8,"column":27,"index":460},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js"},{"name":"../utils/getVariation.js","loc":{"line":9,"column":25,"index":515},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\getVariation.js"},{"name":"../utils/getFreshSideObject.js","loc":{"line":10,"column":31,"index":574},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\getFreshSideObject.js"},{"name":"../utils/math.js","loc":{"line":11,"column":47,"index":655},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\modifiers\\preventOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\math.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _enums = require(\"../enums.js\");\nvar _getBasePlacement = _interopRequireDefault(require(\"../utils/getBasePlacement.js\"));\nvar _getMainAxisFromPlacement = _interopRequireDefault(require(\"../utils/getMainAxisFromPlacement.js\"));\nvar _getAltAxis = _interopRequireDefault(require(\"../utils/getAltAxis.js\"));\nvar _within = require(\"../utils/within.js\");\nvar _getLayoutRect = _interopRequireDefault(require(\"../dom-utils/getLayoutRect.js\"));\nvar _getOffsetParent = _interopRequireDefault(require(\"../dom-utils/getOffsetParent.js\"));\nvar _detectOverflow = _interopRequireDefault(require(\"../utils/detectOverflow.js\"));\nvar _getVariation = _interopRequireDefault(require(\"../utils/getVariation.js\"));\nvar _getFreshSideObject = _interopRequireDefault(require(\"../utils/getFreshSideObject.js\"));\nvar _math = require(\"../utils/math.js\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n    options = _ref.options,\n    name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n    checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n    _options$altAxis = options.altAxis,\n    checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n    boundary = options.boundary,\n    rootBoundary = options.rootBoundary,\n    altBoundary = options.altBoundary,\n    padding = options.padding,\n    _options$tether = options.tether,\n    tether = _options$tether === void 0 ? true : _options$tether,\n    _options$tetherOffset = options.tetherOffset,\n    tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = (0, _detectOverflow.default)(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = (0, _getBasePlacement.default)(state.placement);\n  var variation = (0, _getVariation.default)(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = (0, _getMainAxisFromPlacement.default)(basePlacement);\n  var altAxis = (0, _getAltAxis.default)(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n  if (!popperOffsets) {\n    return;\n  }\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n    var mainSide = mainAxis === 'y' ? _enums.top : _enums.left;\n    var altSide = mainAxis === 'y' ? _enums.bottom : _enums.right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === _enums.start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === _enums.start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? (0, _getLayoutRect.default)(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : (0, _getFreshSideObject.default)();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = (0, _within.within)(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && (0, _getOffsetParent.default)(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = (0, _within.within)(tether ? (0, _math.min)(min, tetherMin) : min, offset, tether ? (0, _math.max)(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n    var _mainSide = mainAxis === 'x' ? _enums.top : _enums.left;\n    var _altSide = mainAxis === 'x' ? _enums.bottom : _enums.right;\n    var _offset = popperOffsets[altAxis];\n    var _len = altAxis === 'y' ? 'height' : 'width';\n    var _min = _offset + overflow[_mainSide];\n    var _max = _offset - overflow[_altSide];\n    var isOriginSide = [_enums.top, _enums.left].indexOf(basePlacement) !== -1;\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n    var _preventedOffset = tether && isOriginSide ? (0, _within.withinMaxClamp)(_tetherMin, _offset, _tetherMax) : (0, _within.within)(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\nvar _default = exports.default = {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};"},"sourceMaps":null,"error":null,"hash":"fc61917f20fa2d5c4d4627325518adb3","cacheData":{"env":{}}}