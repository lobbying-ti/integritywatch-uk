{"id":"../node_modules/@popperjs/core/lib/utils/detectOverflow.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1715768641465},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\package.json","includedInParent":true,"mtime":1715088598035},{"name":"../dom-utils/getClippingRect.js","loc":{"line":1,"column":28,"index":28},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getClippingRect.js"},{"name":"../dom-utils/getDocumentElement.js","loc":{"line":2,"column":31,"index":94},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getDocumentElement.js"},{"name":"../dom-utils/getBoundingClientRect.js","loc":{"line":3,"column":34,"index":166},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\dom-utils\\getBoundingClientRect.js"},{"name":"./computeOffsets.js","loc":{"line":4,"column":27,"index":234},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\computeOffsets.js"},{"name":"./rectToClientRect.js","loc":{"line":5,"column":29,"index":286},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\rectToClientRect.js"},{"name":"../enums.js","loc":{"line":6,"column":97,"index":408},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\enums.js"},{"name":"../dom-utils/instanceOf.js","loc":{"line":7,"column":26,"index":449},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\dom-utils\\instanceOf.js"},{"name":"./mergePaddingObject.js","loc":{"line":8,"column":31,"index":510},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\mergePaddingObject.js"},{"name":"./expandToHashMap.js","loc":{"line":9,"column":28,"index":565},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\detectOverflow.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\@popperjs\\core\\lib\\utils\\expandToHashMap.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectOverflow;\nvar _getClippingRect = _interopRequireDefault(require(\"../dom-utils/getClippingRect.js\"));\nvar _getDocumentElement = _interopRequireDefault(require(\"../dom-utils/getDocumentElement.js\"));\nvar _getBoundingClientRect = _interopRequireDefault(require(\"../dom-utils/getBoundingClientRect.js\"));\nvar _computeOffsets = _interopRequireDefault(require(\"./computeOffsets.js\"));\nvar _rectToClientRect = _interopRequireDefault(require(\"./rectToClientRect.js\"));\nvar _enums = require(\"../enums.js\");\nvar _instanceOf = require(\"../dom-utils/instanceOf.js\");\nvar _mergePaddingObject = _interopRequireDefault(require(\"./mergePaddingObject.js\"));\nvar _expandToHashMap = _interopRequireDefault(require(\"./expandToHashMap.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n// eslint-disable-next-line import/no-unused-modules\n\nfunction detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$placement = _options.placement,\n    placement = _options$placement === void 0 ? state.placement : _options$placement,\n    _options$strategy = _options.strategy,\n    strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n    _options$boundary = _options.boundary,\n    boundary = _options$boundary === void 0 ? _enums.clippingParents : _options$boundary,\n    _options$rootBoundary = _options.rootBoundary,\n    rootBoundary = _options$rootBoundary === void 0 ? _enums.viewport : _options$rootBoundary,\n    _options$elementConte = _options.elementContext,\n    elementContext = _options$elementConte === void 0 ? _enums.popper : _options$elementConte,\n    _options$altBoundary = _options.altBoundary,\n    altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n    _options$padding = _options.padding,\n    padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = (0, _mergePaddingObject.default)(typeof padding !== 'number' ? padding : (0, _expandToHashMap.default)(padding, _enums.basePlacements));\n  var altContext = elementContext === _enums.popper ? _enums.reference : _enums.popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = (0, _getClippingRect.default)((0, _instanceOf.isElement)(element) ? element : element.contextElement || (0, _getDocumentElement.default)(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = (0, _getBoundingClientRect.default)(state.elements.reference);\n  var popperOffsets = (0, _computeOffsets.default)({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = (0, _rectToClientRect.default)(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === _enums.popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === _enums.popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [_enums.right, _enums.bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [_enums.top, _enums.bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n  return overflowOffsets;\n}"},"sourceMaps":null,"error":null,"hash":"e47dcd1b2fd4aaa12470ba2b11a33656","cacheData":{"env":{}}}