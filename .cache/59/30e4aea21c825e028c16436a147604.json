{"id":"../node_modules/d3-geo/src/projection/azimuthal.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1701204570000},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1710515717812},{"name":"../math.js","loc":{"line":1,"column":42,"index":42},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\projection\\azimuthal.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\math.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.azimuthalInvert = azimuthalInvert;\nexports.azimuthalRaw = azimuthalRaw;\nvar _math = require(\"../math.js\");\nfunction azimuthalRaw(scale) {\n  return function (x, y) {\n    var cx = (0, _math.cos)(x),\n      cy = (0, _math.cos)(y),\n      k = scale(cx * cy);\n    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];\n  };\n}\nfunction azimuthalInvert(angle) {\n  return function (x, y) {\n    var z = (0, _math.sqrt)(x * x + y * y),\n      c = angle(z),\n      sc = (0, _math.sin)(c),\n      cc = (0, _math.cos)(c);\n    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];\n  };\n}"},"sourceMaps":null,"error":null,"hash":"26505b237c5a60b44f5577670888296d","cacheData":{"env":{}}}