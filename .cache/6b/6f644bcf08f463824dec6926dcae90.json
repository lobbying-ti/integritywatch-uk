{"id":"../node_modules/d3-geo/src/length.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1701204570000},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1710515717812},{"name":"./adder.js","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\length.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\adder.js"},{"name":"./math.js","loc":{"line":2,"column":50,"index":82},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\length.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\math.js"},{"name":"./noop.js","loc":{"line":3,"column":17,"index":112},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\length.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\noop.js"},{"name":"./stream.js","loc":{"line":4,"column":19,"index":144},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\length.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\stream.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nvar _adder = _interopRequireDefault(require(\"./adder.js\"));\nvar _math = require(\"./math.js\");\nvar _noop = _interopRequireDefault(require(\"./noop.js\"));\nvar _stream = _interopRequireDefault(require(\"./stream.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar lengthSum = (0, _adder.default)(),\n  lambda0,\n  sinPhi0,\n  cosPhi0;\nvar lengthStream = {\n  sphere: _noop.default,\n  point: _noop.default,\n  lineStart: lengthLineStart,\n  lineEnd: _noop.default,\n  polygonStart: _noop.default,\n  polygonEnd: _noop.default\n};\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = _noop.default;\n}\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= _math.radians, phi *= _math.radians;\n  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);\n  lengthStream.point = lengthPoint;\n}\nfunction lengthPoint(lambda, phi) {\n  lambda *= _math.radians, phi *= _math.radians;\n  var sinPhi = (0, _math.sin)(phi),\n    cosPhi = (0, _math.cos)(phi),\n    delta = (0, _math.abs)(lambda - lambda0),\n    cosDelta = (0, _math.cos)(delta),\n    sinDelta = (0, _math.sin)(delta),\n    x = cosPhi * sinDelta,\n    y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n    z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\nfunction _default(object) {\n  lengthSum.reset();\n  (0, _stream.default)(object, lengthStream);\n  return +lengthSum;\n}"},"sourceMaps":null,"error":null,"hash":"85b8ea889ecfdcf22051d9a13b68c6c0","cacheData":{"env":{}}}