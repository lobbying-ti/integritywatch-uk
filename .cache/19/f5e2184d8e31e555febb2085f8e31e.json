{"id":"../node_modules/crossfilter2/src/heapselect.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1715768641465},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\crossfilter2\\package.json","includedInParent":true,"mtime":1711627384248},{"name":"./identity","loc":{"line":1,"column":21,"index":21},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\crossfilter2\\src\\heapselect.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\crossfilter2\\src\\identity.js"},{"name":"./heap","loc":{"line":2,"column":24,"index":59},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\crossfilter2\\src\\heapselect.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\crossfilter2\\src\\heap.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _identity = _interopRequireDefault(require(\"./identity\"));\nvar _heap = _interopRequireDefault(require(\"./heap\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction heapselect_by(f) {\n  var heap = _heap.default.by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n      min,\n      i,\n      d;\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n    return queue;\n  }\n  return heapselect;\n}\nconst h = heapselect_by(_identity.default);\nh.by = heapselect_by; // assign the raw function to the export as well\nvar _default = exports.default = h;"},"sourceMaps":null,"error":null,"hash":"eff6090fae19ff8854c60e3936ec78e7","cacheData":{"env":{}}}