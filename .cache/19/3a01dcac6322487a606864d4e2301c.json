{"id":"../node_modules/d3-geo/src/path/measure.js","dependencies":[{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\package.json","includedInParent":true,"mtime":1701204570000},{"name":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\package.json","includedInParent":true,"mtime":1710515717812},{"name":"../adder.js","loc":{"line":1,"column":18,"index":18},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\path\\measure.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\adder.js"},{"name":"../math.js","loc":{"line":2,"column":19,"index":52},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\path\\measure.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\math.js"},{"name":"../noop.js","loc":{"line":3,"column":17,"index":83},"parent":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\path\\measure.js","resolved":"C:\\Users\\tom.wright\\PycharmProjects\\UK_meetings_app\\ukapp\\integritywatch-uk\\node_modules\\d3-geo\\src\\noop.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _adder = _interopRequireDefault(require(\"../adder.js\"));\nvar _math = require(\"../math.js\");\nvar _noop = _interopRequireDefault(require(\"../noop.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar lengthSum = (0, _adder.default)(),\n  lengthRing,\n  x00,\n  y00,\n  x0,\n  y0;\nvar lengthStream = {\n  point: _noop.default,\n  lineStart: function () {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function () {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = _noop.default;\n  },\n  polygonStart: function () {\n    lengthRing = true;\n  },\n  polygonEnd: function () {\n    lengthRing = null;\n  },\n  result: function () {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\nvar _default = exports.default = lengthStream;"},"sourceMaps":null,"error":null,"hash":"53d54d87c9f66e7a6dafb1653f456eaf","cacheData":{"env":{}}}